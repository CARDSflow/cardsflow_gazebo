#
#  Copyright (c) 2012-2013, MYOROBOTICS consortium
#  Author: Steffen Wittmeier, Michael Jaentsch
#  All rights reserved
#
#  Redistribution and use in source and binary forms, with or without
#  modification is governed by the MYOROBOTICS Non-Commercial Software
#  License Agreement. See LICENSE file distributed with this work for
#  additional information.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under this license is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either expressed or
#  implied. See the License for the specific language governing permissions
#  and limitations under the License.
#
#

FIND_PACKAGE ( Libxml++2 )
FIND_PACKAGE ( Eccerobot )

IF (NOT LIBXMLPP_FOUND OR NOT Eccerobot_FOUND)
    MESSAGE(STATUS "Missing dependencies for Eccerobot Muscle extension. Not building!")
    RETURN()
ENDIF ()

#ADD_DEFINITIONS(-Dqh_QHpointer)

INCLUDE_DIRECTORIES(
    ${CMAKE_CURRENT_SOURCE_DIR}
    /home/wittmeis/projects/caliper/workspace/caliper-plugins/plugins/de.caliper.evo
    ${ECCEROBOT_INCLUDE_DIRS}
    ${LIBXML++_INCLUDE_DIR}
)
 
SET (ECCEROBOT_MUSCLE_SRCS 
    EccerobotMuscleExtension.cpp
    physics/Muscle.cpp
    physics/Actuator.cpp
    physics/AttachmentPoint.cpp
    physics/SphericalPulley.cpp
    physics/CylindricalPulley.cpp
    physics/MeshPulley.cpp
    physics/PulleyStateMachine.cpp
    physics/LinearSpringDamper.cpp
    physics/ZenerModel.cpp
    
    graphics/Muscle.cpp
    graphics/SphericalPulley.cpp
    graphics/CylindricalPulley.cpp
    graphics/MeshPulley.cpp
    graphics/AttachmentPoint.cpp
    graphics/SeriesElasticElement.cpp
    graphics/ForceSensor.cpp
)
        
QT4_WRAP_CPP(
	ECCEROBOT_MUSCLE_MOC_SRCS
    EccerobotMuscleExtension.h
)

ADD_LIBRARY( 
    de.caliper.sim.ext.actuators.eccerobotMuscle
    SHARED
    ${ECCEROBOT_MUSCLE_SRCS}
    ${ECCEROBOT_MUSCLE_MOC_SRCS}
)

TARGET_LINK_LIBRARIES(
    de.caliper.sim.ext.actuators.eccerobotMuscle
    ${SGAL_LIBRARIES}
    ${LIBXML++_LIBRARY}
    ${LIBS}
)

ADD_EXECUTABLE(testMotor
    test/testMotor.cpp
    physics/Actuator.cpp
)

TARGET_LINK_LIBRARIES(
    testMotor
    ${SGAL_LIBRARIES}
    ${LIBS}
)

ADD_EXECUTABLE(testZenerModel
    test/testZenerModel.cpp
    physics/ZenerModel.cpp
)

TARGET_LINK_LIBRARIES(
    testZenerModel
    ${SGAL_LIBRARIES}
    ${LIBS}
)

#ADD_EXECUTABLE(testMuscle
#    test/testMuscle.cpp
#)

#TARGET_LINK_LIBRARIES(
#    testMuscle
#    ${SGAL_LIBRARIES}
#    ${QUARTER_LIBRARY}
#    ${LIBS}
#    de.caliper.sim.ext.actuators.eccerobotMuscle
#   /home/wittmeis/projects/caliper/workspace/caliper-plugins@build/plugins/de.caliper.evo/libde.caliper.evo.so
#)

ADD_EXECUTABLE(muscle2Latex
    test/muscle2Latex.cpp
)

TARGET_LINK_LIBRARIES(
    muscle2Latex
    ${SGAL_LIBRARIES}
    ${QUARTER_LIBRARY}
    ${LIBS}
    de.caliper.sim.ext.actuators.eccerobotMuscle
)

ADD_EXECUTABLE(qhull
    test/qhull.cpp
)

TARGET_LINK_LIBRARIES(
    qhull
    ${SGAL_LIBRARIES}
    ${QUARTER_LIBRARY}
    ${LIBS}
)

ADD_EXECUTABLE(benchmarker
    test/benchmarker.cpp
)

TARGET_LINK_LIBRARIES(
    benchmarker
    ${SGAL_LIBRARIES}
    ${QUARTER_LIBRARY}
    ${LIBS}
    de.caliper.sim
    de.caliper.sim.ext.actuators.eccerobotMuscle
    de.caliper.sim.ext.joints.stribeckFriction
)


ADD_SIMULATOR_EXTENSION(de.caliper.sim.ext.actuators.eccerobotMuscle)
